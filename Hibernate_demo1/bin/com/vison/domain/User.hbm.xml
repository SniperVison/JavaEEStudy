<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
	<!--在包com.vison.domain下 新建一个配置文件User.hbm.xml， 用于映射User类对应数据库中的t_user表 注: 文件名 User.hbm.xml U一定要大写，要和类保持一致 -->
	<class name="com.vison.domain.User" table="t_user">
		<!--表示属性id,映射表里的字段id -->
		<id name="id" column="id">
		<!--generator:主键生成策略，就是每条记录录入时，主键的生成规则（7个）
                                          ①identity:主键自增，由数据库来维护主键值，录入时不需要指定主键；
                                          ②sequence:Oracle中主键生成策略；
                                          ③increment（了解）:主键自增，由hibernate来维护，每次插入前会先查询表中的id最大值，然后max（id）+1作为新主键值。但是有线程安全问题，并发访问的时候会有问题，开发中千万不要使用；                         
                                          ④hilo:高低位算法，主键自增，由hibernate来维护，开发中不使用（因为没有一个数据库是同时不支持主键自增或者序列的） ，所以这个策略只有数学意义，没有实际意义的；                       		
				    ⑤native:hilo+sequence+identity 自动三选一策略；
				    ⑥uuid:产生随机字符串作为主键，但主键类型必须为string类型
				    ⑦assigned:自然主键生成策略，hibernate不会管理主键值，由开发人员自己手动录入
		  -->
			<!--<generator class="native"> 意味着id的自增长方式采用数据库的本地方式 -->
			<generator class="native"></generator>
		</id>
		<property name="name" column="name"></property>
		<property name="password" column="password"></property>

	</class>

</hibernate-mapping>