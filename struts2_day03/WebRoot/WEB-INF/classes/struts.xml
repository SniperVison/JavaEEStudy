<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN"
	"http://struts.apache.org/dtds/struts-2.5.dtd">




<struts>

	<!--配置动态方法调用是否开启常量 ，默认是关闭，需要开启 -->
	<constant name="struts.enable.DynamicMethodInvocation" value="true"></constant>
	<package name="vs" namespace="/" extends="struts-default">

		<!-- HTTP Status 404 - Method add for action helloworld is not allowed! 
			搜了半天，有说是要添加 <constant name="struts.enable.DynamicMethodInvocation" value="true"></constant>， 
			明确打开动态方法调用功能，因为 struts2 默认是关的，但在这里并不能解决问题，因为配置是正确的。 原来是 struts2.5 为了增加安全性，在 
			struts.xml 添加了这么个属性：<global-allowed-methods>regex:.*</global-allowed-methods> 
			同时要注意，struts.xml 的解析版本要为 2.5， -->
		<global-allowed-methods>regex:.*</global-allowed-methods><!--这个属性是在struts2.5版本为了增加安全性必须要加（不加不能运行），在2.3版本是不用加的 -->

		<!--result-types :dispatcher(转发) -->
		<action name="ValueStackDemo1Action" class="com.vison.valuestack.ValueStackDemo1Action"
			method="execute">
			<result name="success" type="dispatcher">/showvs.jsp</result>
		</action>
		
		<action name="ParamToOgnlDemo1Action" class="com.vison.ognl2struts2.ParamToOgnlDemo1Action"
			method="execute">
			<result name="success" type="dispatcher">/form.jsp</result>
		</action>
		
		<action name="ParamToOgnlDemo1Action2" class="com.vison.ognl2struts2.ParamToOgnlDemo1Action2"
			method="execute">
			<result name="success" type="dispatcher">/form.jsp</result>
		</action>
		
		<action name="OgnlToStruts2ConfigAction" class="com.vison.config.OgnlToStruts2ConfigAction"
			method="execute">
			<result name="success" type="redirectAction">
			<param name="actionName">ParamToOgnlDemo1Action</param>
			<param name="namespace">/</param>
			
			
			<!--如果添加的参数struts2“看不懂”，就会作为参数附加重定向的路径之后
			       如果参数是动态的，可以使用“${   }”包裹ognl表达式，动态取值
			  -->
			<!-- <param name="name">vison</param> --><!--这里的参数是相当于“ParamToOgnlDemo1Action?name=vison” ,这种操作可以用来传递参数的 -->
			<!--将Ognl表达式放进"${}",是Ognl在配置文件中的格式，这里的效果同上，不过这里可以动态传递参数，而上面的是固定的  -->
			<param name="name">${name}</param>
			</result>
		</action>
		
	
		
		
	</package>

</struts>